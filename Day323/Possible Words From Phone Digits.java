/* Possible Words From Phone Digits
You are given a keypad (as shown in the diagram) and an array arr[ ] containing digits,
your task is to list all possible words in any order which can be generated by pressing numbers in arr[] sequentially.
Note: Number 0 and 1 do not map to any letters.
You can return the words in any order, the driver code will print them in sorted order.

Examples :

Input: arr[] = [2, 3]
Output: [ad, ae, af, bd, be, bf, cd, ce, cf]
Explanation: When we press 2 and 3 total 3 x 3 = 9 possible words formed.

Input: arr[] = [2]
Output: [a, b, c]
Explanation: When we press 2 total 3 possible words formed.

Constraints:

1 ≤ arr.size() ≤ 9
0 ≤ arr[i] ≤ 9 */


class Solution {
    public ArrayList<String> possibleWords(int[] arr) {
        // code here
        ArrayList<String> res = new ArrayList<>();
        String []map = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        StringBuilder sb = new StringBuilder();
        
        solve(arr, 0, sb, map, res);
        
        return res;
    }
    
    private static void solve(int []arr, int index, StringBuilder sb, String []map, ArrayList<String> res){
        if(index == arr.length){
            res.add(sb.toString());
            return;
        }
        
        int digit = arr[index];
        
        if(digit < 2 || digit > 9){
            solve(arr, index + 1, sb, map, res);
            return;
        }
        
        for(char ch : map[digit].toCharArray()){
            sb.append(ch);
            solve(arr, index + 1, sb, map, res);
            sb.deleteCharAt(sb.length() - 1);
        }
    }
}
